// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerApp;

#nullable disable

namespace ServerApp.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20240322042427_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServerApp.Models.Mesto", b =>
                {
                    b.Property<long>("M")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("m")
                        .HasAnnotation("Relational:JsonPropertyName", "m");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("M"));

                    b.Property<int>("BrojStanovnika")
                        .HasColumnType("int")
                        .HasColumnName("broj_stanovnika")
                        .HasAnnotation("Relational:JsonPropertyName", "broj_stanovnika");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("naziv")
                        .HasAnnotation("Relational:JsonPropertyName", "naziv");

                    b.Property<string>("PttBroj")
                        .IsRequired()
                        .HasColumnType("nchar(5)")
                        .HasColumnName("ptt_broj")
                        .HasAnnotation("Relational:JsonPropertyName", "ptt_broj");

                    b.HasKey("M");

                    b.ToTable("mesto");

                    b.HasAnnotation("Relational:JsonPropertyName", "rodno_mesto");
                });

            modelBuilder.Entity("ServerApp.Models.Osoba", b =>
                {
                    b.Property<long>("O")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("o")
                        .HasAnnotation("Relational:JsonPropertyName", "o");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("O"));

                    b.Property<string>("BrojTelefona")
                        .IsRequired()
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("broj_telefona")
                        .HasAnnotation("Relational:JsonPropertyName", "broj_telefona");

                    b.Property<DateOnly>("DatumRodjenja")
                        .HasColumnType("date")
                        .HasColumnName("datum_rodjenja")
                        .HasAnnotation("Relational:JsonPropertyName", "datum_rodjenja");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(33)
                        .HasColumnType("nvarchar(33)")
                        .HasColumnName("ime")
                        .HasAnnotation("Relational:JsonPropertyName", "ime");

                    b.Property<string>("Jmbg")
                        .IsRequired()
                        .HasColumnType("nchar(13)")
                        .HasColumnName("jmbg")
                        .HasAnnotation("Relational:JsonPropertyName", "jmbg");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(33)
                        .HasColumnType("nvarchar(33)")
                        .HasColumnName("prezime")
                        .HasAnnotation("Relational:JsonPropertyName", "prezime");

                    b.Property<long>("RodnoMesto")
                        .HasColumnType("bigint")
                        .HasColumnName("rodno_mesto")
                        .HasAnnotation("Relational:JsonPropertyName", "rodno_mesto");

                    b.Property<int>("Starost")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("starost")
                        .HasComputedColumnSql("datediff(month,[datum_rodjenja],getdate())")
                        .HasAnnotation("Relational:JsonPropertyName", "starost");

                    b.HasKey("O");

                    b.HasIndex("Jmbg")
                        .IsUnique();

                    b.HasIndex("RodnoMesto");

                    b.ToTable("osoba", (string)null);
                });

            modelBuilder.Entity("ServerApp.Models.Prebivaliste", b =>
                {
                    b.Property<long>("O")
                        .HasColumnType("bigint")
                        .HasColumnName("o");

                    b.Property<long>("M")
                        .HasColumnType("bigint")
                        .HasColumnName("m");

                    b.HasKey("O", "M");

                    b.HasIndex("M");

                    b.HasIndex("O")
                        .IsUnique();

                    b.ToTable("prebivaliste", (string)null);
                });

            modelBuilder.Entity("ServerApp.Models.Osoba", b =>
                {
                    b.HasOne("ServerApp.Models.Mesto", "Mesto")
                        .WithMany("Osobe")
                        .HasForeignKey("RodnoMesto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Mesto");
                });

            modelBuilder.Entity("ServerApp.Models.Prebivaliste", b =>
                {
                    b.HasOne("ServerApp.Models.Mesto", null)
                        .WithMany()
                        .HasForeignKey("M")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServerApp.Models.Osoba", null)
                        .WithMany()
                        .HasForeignKey("O")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ServerApp.Models.Mesto", b =>
                {
                    b.Navigation("Osobe");
                });
#pragma warning restore 612, 618
        }
    }
}
